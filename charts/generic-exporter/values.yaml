# Copyright 2024 Richard Kosegi
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# -- Number of replicas
replicaCount: 1
image:
  # -- Container image name and version. Must be defined.
  name: ""
  # -- When to pull image.
  pullPolicy: Always
# -- List of pull secrets
imagePullSecrets: []
# Override partial name
nameOverride: ""
# Override full name
fullnameOverride: ""
serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: default
service:
  # -- Type of service
  type: ClusterIP
  # -- Service port
  port: 80
  # -- Name of target port. Used to match endpoint in service monitor and definition in service.
  targetPort: metrics
serviceMonitor:
  # -- Whether servicemonitor resource should be created
  enabled: true
  # -- Endpoint configuration
  endpoints:
    - port: '{{ .Values.service.targetPort }}'
      interval: 30s
# -- annotations to put on pod
podAnnotations: {}
# -- SecurityContext to put on pod
podSecurityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
# runAsUser: 1000
# -- Additional security context to put on container
securityContext: {}
# -- Port that exporter is listening on. Also used for probes (if enabled)
containerPort: 9000
# -- Container resources
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi
probe:
  # -- When true, then probes are configured on container
  enabled: true
  # -- HTTP context path that handles probe requests
  path: /healthz
# -- Node selector that could restrict placement of pods
nodeSelector: {}
# -- Pod's tolerations.
tolerations: []
# -- Pod's scheduling constraints.
affinity: {}
config:
  # -- Whether to create resource with config files
  enabled: false
  # -- When true, resource as embedded into Secret, instead of ConfigMap
  confidential: true
  # -- Path on the file system where configuration files are mounted onto
  mountPath: /config
  # -- Actual config files content
  data: {}
  #  config.yaml: |
  #    listen: :9000
# -- extra mount points to use in pod, should be aligned with extraVolumes
extraMounts:
#  - mountPath: /data
#    name: data
#    sub: file.txt
# -- extra volumes to use in pod, should be aligned with extraMounts
extraVolumes: []
#  - name: data
#    secret:
#      secretName: my-data
# -- extra objects to create
extraObjects: []
#  - apiVersion: v1
#    kind: Secret
#    metadata:
#      name: config
#    stringData:
#      config.yaml: some data
# -- exporter entry point
command: []
# -- exported arguments
arguments: [] # additional arguments
